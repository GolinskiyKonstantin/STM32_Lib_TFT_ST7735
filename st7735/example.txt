/*	сохраняем данный файл в кодировке UTF-8		*/

 author: Golinskiy Konstantin	e-mail: golinskiy.konstantin@gmail.com
 

//===================================================

//----- SPI2 parameter configuration ----------------------------------------

// SPI включаем только передача ( MOSI SCK )
// настройка SPI, скорость максимальная, 1 Line (TX only), Polarity High, Phase 2Edge:
// частота SPI должна быть меньше 50 МГц

  hspi2.Instance = SPI2;
  hspi2.Init.Mode = SPI_MODE_MASTER;
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
  hspi2.Init.NSS = SPI_NSS_SOFT;
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  hspi2.Init.CRCPolynomial = 7;
  
//-----------------------------------------------------------------------------



в файле fonts.h нужно выбрать шрифты:

//---- для экономии памяти шрифты которые не используються закоментировать -------------------------------------
			// Шрифт имеет кирилицу и латиницу
			#define FONT_6x8		//  6 x 8 pixels font size structure 
			#define FONT_7x9		//  7 x 9 pixels font size structure 
			#define FONT_11x18		//  11 x 18 pixels font size structure 
			#define FONT_16x26		//  16 x 26 pixels font size structure 
			// Только цифры -- only numbers
			#define FONT_16x28		//  16 x 28 pixels font size structure only numbers	
//--------------------------------------------------------------------------------------------------------------

в файле ST7735.h указываем настройки:

//#######  SETUP  ##############################################################################################
		
		//==== выбераем через что будем отправлять через HAL или CMSIS(быстрее) ==================
		//-- нужное оставляем другое коментируем ( важно должно быть только один выбран )---------
		
			// указываем порт SPI для CMSIS ( быстро )-------
			// так как у разных МК разные регистры то в функциях корректируем под свой МК
			// на данный момент есть реализация на серию F1 F4 H7 для выбора серии в функциях
			//	void ST7735_SendCmd(uint8_t Cmd);
			//	void ST7735_SendData(uint8_t Data );
			//	void ST7735_SendDataMASS(uint8_t* buff, size_t buff_size);	
			// комментируем и раскомментируем то что нам нужно, также там же редактируем под свой МК если не работает
			#define 	ST7735_SPI_CMSIS 	SPI2
			//-----------------------------------------------
			
			// указываем порт SPI для HAL ( медлено )--------
			//#define 	ST7735_SPI_HAL 		hspi2
			//-----------------------------------------------
			
		//============================================================================
		
		//=== указываем порты ( если в кубе назвали их DC RES CS то тогда нечего указывать не нужно )
		#if defined (DC_GPIO_Port)
		#else
			#define DC_GPIO_Port	GPIOA
			#define DC_Pin			GPIO_PIN_11
		#endif
		
		#if defined (RES_GPIO_Port)
		#else
			#define RES_GPIO_Port   GPIOA
			#define RES_Pin			GPIO_PIN_12
		#endif
		
		//--  Cесли используем порт CS для выбора устройства тогда раскомментировать ------------
		// если у нас одно устройство лучше пин CS притянуть к земле( или на порту подать GND )
		
		#define CS_PORT
		
		//----------------------------------------------------------------------------------------
		#ifdef CS_PORT
			#if defined (CS_GPIO_Port)
			#else
				#define CS_GPIO_Port    GPIOA
				#define CS_Pin			GPIO_PIN_14
			#endif
		#endif
		
		//=============================================================================
		
		//=== выбрать нужный дисплей  ==============================================================
		//-- нужное оставляем другое коментируем ( важно должно быть только один выбран )---------
		
		//	#define  ST7735_IS_160X128_V1		// 1.8" 160 x 128 AliExpress/eBay  display, default orientatio		
		//	#define  ST7735_IS_160X128_V2		// 1.8" 160 x 128 WaveShare ST7735S-based display, default orientation		
		//	#define  ST7735_IS_128X128			// 1.44" 128 x 128 display, default orientation		
			#define  ST7735_IS_160X80			// 0.96" mini 160 x 80 display (it's unlikely you want the default orientation)
		
		//==========================================================================================
		
//##############################################################################################################





//=========================================================


#include <ST7735.h>

#include "bitmap.h"
#include "fonts.h"


	.........
	.........

main()=============================================================================================================================
	
	
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	// Процедура инициализации дисплея
	ST7735_Init();
		
	// установка ротации дисплея не обязательно так как по умолчанию стоит режим 1 ( всего 4 режима 1,2,3,4 )
	 ST7735_rotation( 4 );

	// закрашиваем весь экран указаным цветом 
	ST7735_FillScreen( RGB565(50, 10, 10) );
		
	// печатаем символ ( один ) параметры: х,  у,  цвет символа, цвет фона, вкл/выкл фон, размер шрифта, множитель шрифта (увеличивает в х раз шрифт ), сам символ
	ST7735_DrawChar( 40, 20, RGB565( 255, 255, 255 ) , RGB565( 0, 10, 255 ) , 0, &Font_16x26, 2, 'F' );

	// печатаем строку параметры: х,  у,  цвет строки, цвет фона, вкл/выкл фон, размер шрифта, множитель шрифта (увеличивает в х раз шрифт ), сама строка
	ST7735_print( 10, 10, RGB565(255, 255, 255) , RGB565(50, 50, 255) , 0, &Font_6x8, 1, "Привет Hello Вася" );
	
	HAL_Delay (2000);
	
	// очистка экрана - закрашивает экран цветом черный
	ST7735_Clear();
	
	// рисуем цветную иконку. параметры координаты х и у, размер иконки шир и выс, имя иконки ( массив )
	ST7735_DrawImage( 0, 0, 85, 80, logoRGB );
	
	HAL_Delay (2000);
	
	// очистка экрана - закрашивает экран цветом черный
	ST7735_Clear();
	
	// рисуем монохромную иконку. параметры координаты х и у, имя иконки ( массив ), размер иконки шир и выс, цвет отображения
	ST7735_DrawBitmap( 10, 20, logo, 128, 27, RGB565(255, 0, 0) );		

	// круг пустотелый
	//ST7735_DrawCircle(100, 100, 50, RGB565(255, 0, 255));

	// круг закрашеный
	//ST7735_DrawCircleFilled(200, 200, 20, RGB565(255, 40, 255)) ;

	// линия
	//ST7735_DrawLine(50, 50, 70, 90, RGB565(255, 255, 0));

	// прямоугольник закрашеный
	//ST7735_DrawRectangleFilled(70, 200, 100, 20, RGB565(0, 255, 0)) ;
	
	// прямоугольник пустотелый
	//ST7735_DrawRectangle(70, 200, 100, 20, RGB565(0, 255, 50)) ;			

	// рисуем треугольник пустотелый
	//ST7735_DrawTriangle(20, 40, 150, 100, 200, 200, RGB565(100, 255, 150) );

	// рисуем треугольник закрашеный
	//ST7735_DrawFilledTriangle(20, 40, 150, 100, 200, 200, RGB565(100, 255, 150) );
		
	// переход в спящий режим
	//ST7735_SleepModeEnter();

	// выход их спящего режима
	//ST7735_SleepModeExit();	

	// вкл/выкл дисплея 0-выкл 1- вкл
	//ST7735_DisplayPower( 1 );

	// инверсия цветов 0-вкл  1-выкл
	//ST7735_InversionMode(1);
	
	// рисуем прямоугольник с закругленными краями ( закрашенный )
	ST7735_DrawFillRoundRect(10, 10, 50, 50, 10, RGB565(100, 255, 150));
	
	// рисуем прямоугольник с закругленными краями ( пустотелый )
	ST7735_DrawRoundRect(10, 10, 50, 50, 10, RGB565(100, 255, 150));
	
	// рисуем полукруг ( правое или левое полушарие (параметр 1 или 2) ) закрашенный
	ST7735_DrawFillCircleHelper(30, 30, 20 , 1, 0, RGB565(100, 255, 150));
	
	// рисуем дугу ( четверть круга (параметр 1, 2, 4, 8) ) шириной 1 пиксель
	ST7735_DrawCircleHelper(30, 30, 20 , 1, RGB565(100, 255, 150));
	
////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	.........
	.........
	.........

while(1)===========================================================================================================================

	.........
	.........
	.........
	.........

=== end while(1) ==================================================================================================================
=== end main() ====================================================================================================================
